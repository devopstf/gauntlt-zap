@reallyslow
Feature: Using Arachni, perform some checks on different kinds of Injection
  # See: https://github.com/sqlmapproject/sqlmap/wiki/Usage

Background:
  Given "arachni" is installed
  And the following environment variables:
     | name       | environment_variable_name  |
     | target_url | TARGET_HOSTNAME            |

@active
Scenario: Identify SQL injection vulnerabilities 
  When I launch a "arachni" attack with:
    """
    arachni <target_url> checks=sql_injection
    """
  Then the output should contain "0 issues were detected."

@active
Scenario: Identify SQL injection vulnerabilities (with Differential Analysis)
  When I launch a "arachni" attack with:
    """
    arachni <target_url> checks=sql_injection_differential
    """
  Then the output should contain "0 issues were detected."

@active
Scenario: Identify SQL injection vulnerabilities (with Timing Attacks)
  When I launch a "arachni" attack with:
    """
    arachni <target_url> checks=sql_injection_timing
    """
  Then the output should contain "0 issues were detected."

@active
Scenario: Check If a LDAP Injection can be performed
  When I launch a "arachni" attack with:
    """
    arachni <target_url> checks=ldap_injection
    """
  Then the output should contain "0 issues were detected."

@active
Scenario: Identify No SQL injection vulnerabilities   
  When I launch a "arachni" attack with:
    """
    arachni <target_url> checks=no_sql_injection
    """
  Then the output should contain "0 issues were detected."

@active
Scenario: Check If OS Command-line injections can be performed
  When I launch a "arachni" attack with:
    """
    arachni <target_url> checks=os_cmd_injection
    """
  Then the output should contain "0 issues were detected."
